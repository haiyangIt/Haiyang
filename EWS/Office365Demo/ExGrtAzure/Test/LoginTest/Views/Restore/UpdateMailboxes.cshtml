


@section Scripts {
    <script>

        $.widget("custom.usermailboxes",
            {
                options: {
                    mailboxes: {},
                    pagecount: 10,
                    totalpage: 0
                },
                _create: function () {
                    this.element.addClass("usermailboxes");
                    this.checkAllElement = $("<input />").appendTo(this.element);
                    this.mailboxListElement = $("<ul></ul>").appendTo(this.element);
                    this.pageElement = $("")
                },
                _setOption: function (key, value) {
                    if (key === "value") {
                        value = this._constrain(value);
                    }
                    this._super(key, value);
                },
                _setOptions: function (options) {
                    this._super(options);
                    this.refresh();
                },
                refresh: function () {
                    var progress = this.options.value + "%";
                    this.element.text(progress);
                    if (this.options.value == 100) {
                        this._trigger("complete", null, { value: 100 });
                    }
                },
                _constrain: function (value) {
                    if (value > 100) {
                        value = 100;
                    }
                    if (value < 0) {
                        value = 0;
                    }
                    return value;
                },
                _destroy: function () {
                    this.element
                        .removeClass("progressbar")
                        .text("");
                }
            });

        ;(function ($) {
            $.fn.userMailbox.default = {
                enablePage: false,
                totalPage: 0,
                pageCount: 10,
                setMailboxData: function (mailboxes) { }
            };

            var methods = {
                init: function () {

                },
                destroy: function () {

                }
            };
           
            $.fn.userMailbox = function (options) {
                var opts = $.extend({}, $.fn.userMailbox.default, setting);

                if (methods[method]) {
                    return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
                } else if (typeof method === 'object' || !method) {
                    return methods.init.apply(this, arguments);
                } else {
                    $.error('Method ' + method + ' does not exist on jQuery.tooltip');
                }

                return this;
            };

            $.extend($.fn.userMailbox.prototype, {

            })


        })(jQuery);
    </script>
}