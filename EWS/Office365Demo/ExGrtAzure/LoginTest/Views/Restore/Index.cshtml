@using EwsDataInterface
@using System.Collections
@using LoginTest.Models.Restore
@model RestoreUserInfo

@{
    ViewBag.Title = "Index";
    ViewBag.Dump = 2;
    ViewBag.Org = 3;
    ViewBag.Alter = 1;
    //Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/bundles/bootstrapdialogcss")
@Styles.Render("~/bundles/customerMailboxcss")
@Styles.Render("~/bundles/bootstrapselectcss")

<div class="container restore">
    <div class="row">
        <div class="panel panel-default form-group" style="margin-left:15px; margin-right:15px; margin-top:15px;">
            <div class="panel-heading"></div>
            <div class="panel-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-3 restore-calendar">
                            <input type="text" class="form-control" style="min-width:16.6%" id="catalog-calendar" />
                        </div>
                        <div class="col-md-9 restore-days">
                            <span id="catalogInDays" style="float:left" class=""></span>

                            <input type="button" class="btn btn-primary" id="RestoreBtn" style="float:right" value="Restore" />
                            <input type="button" class="btn btn-primary" id="Mailboxes" style="margin-right:10px; float:right" value="Mailboxes" />
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class="row" id="restore">
        <div class="@*col-md-3*@ restore-navs col-fixed-300">
            <div class="panel panel-default">
                <div class="panel-heading"></div>
                <div id="list">

                </div>
                <div id="folderList">

                </div>
            </div>
        </div>
        <div class="col-md-12 restore-details col-offset-300">
            <div class="panel panel-default panel-details">

                <div class="panel-heading"></div>
                <div id="details">

                </div>
                <div id="maildetails">

                </div>
            </div>
        </div>
    </div>

    <div class="restore-destination-container hidden">
        <form id="restore_destination_form" role="form" class="form-horizontal">
            <div class="restore_destination" id="restore_destination">
                <fieldset>
                    <legend>Choose Restore Type</legend>
                    <div class="form-group">
                        <div class="col-md-3 col-md-offset-1">
                            <lable class="control-label"><input type="radio" id="RestoreToOrg" name="RestoreType" value="@ViewBag.Org" checked="checked" required />&nbsp;Restore Orginal</lable>
                        </div>
                        <div class="col-md-3">
                            <lable class="control-label"><input type="radio" id="RestoreToAlter" name="RestoreType" value="@ViewBag.Alter" required />&nbsp;Restore Alternative</lable>
                        </div>
                        <div class="col-md-5">
                            <lable class="control-label"><input type="radio" id="RestoreToAzure" name="RestoreType" value="@ViewBag.Dump" required />&nbsp;Dump to Azure Storage</lable>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>Input Restore Information</legend>
                    <div class="form-group">
                        <label class="col-md-5 control-label">Restore Admin User:</label>
                        <div class="col-md-7">
                            <input type="text" id="RestoreAdminUser" name="RestoreAdminUser" value="devO365admin@arcservemail.onmicrosoft.com" class="form-control" required email />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-5 control-label">Restore Admin Password:</label>
                        <div class="col-md-7">
                            <input type="password" id="RestoreAdminPassword" value="arcserve1!" name="RestoreAdminPassword" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-group hidden" id="restore_dump">
                        <label class="control-label col-md-5">MailAddress for Notification:</label>
                        <div class="col-md-7">
                            <input type="text" id="NotificationAddress" name="NotificationAddress" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group hidden" id="dump_type">
                        <label class="control-label col-md-5">Dump Type:</label>
                        <div class="col-md-3" style="margin-top:8px;">
                            <lable class="control-label" data-toggle="tooltip" title="Mail to eml, Contact to vcf, Appointment to vcs"><input type="radio" id="RestoreTypeEml" name="ExportType" value="2" checked="checked" required />&nbsp;Eml/Vcf/Vcs..</lable>
                        </div>
                        <div class="col-md-4" style="margin-top:8px;">
                            <lable class="control-label" data-toggle="tooltip" title="All item to msg"><input type="radio" id="RestoreTypeMsg" name="ExportType" value="3" required />&nbsp;Msg</lable>
                        </div>
                    </div>
                    <div class="form-group hidden" id="restore_alternative_mailbox">
                        <label class="control-label col-md-5">Destination Mailbox:</label>
                        <div class="col-md-7">
                            <input type="text" id="RestoreAlterMailbox" name="RestoreAlterMailbox" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group hidden" id="restore_alternative_folder">
                        <label class="control-label col-md-5">Destination Folder:</label>
                        <div class="col-md-7">
                            <input type="text" id="RestoreAlterFolder" name="RestoreAlterFolder" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group" id="restore_original_folder">
                        <label class="control-label col-md-5">Destination Folder:</label>
                        <div class="col-md-7">
                            <input type="text" id="RestoreFolder" name="RestoreFolder" class="form-control" />
                        </div>
                    </div>
                    
                    
                </fieldset>
            </div>
        </form>
    </div>
</div>





@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrapdialog")
    @Scripts.Render("~/bundles/bottstrapselect")
    @Scripts.Render("~/bundles/arcserveutil")
    @Scripts.Render("~/bundles/three-status-select")
    @Scripts.Render("~/bundles/three-status-select-nav")
    @Scripts.Render("~/bundles/customerPaginator")
    @Scripts.Render("~/bundles/customerMailbox")


    <script id="maildetailTemplate" type="text/html">
        <table class='table table-striped table-hover table-condensed table-bordered'>
            <thead>
                <tr>
                    <th class="restore-table-column-checkbox"><input type="checkbox" class="checkbox restore-check restore-unselected hidden" id="maildetail-selectall" /></th>
                    <th class="restore-table-column-subject">Subject</th>
                    <th class="restore-table-column-createtime">Create Time</th>
                    <th class="restore-table-column-size">Size</th>
                </tr>
            </thead>
            <tbody>
                {{#mails}}
                <tr>
                    <td align="center"><input type="checkbox" class="checkbox restore-check restore-unselected" itemid="{{OtherInformation.ItemId}}" /></td>
                    <td>{{OtherInformation.DisplayName}}</td>
                    <td>{{OtherInformation.CreateTime}}</td>
                    <td>{{OtherInformation.Size}}</td>
                </tr>
                {{/mails}}
            </tbody>
        </table>
    </script>

    <script>
        $(document).ready(function () {
            // todo $("#).plugin();
            // todo $("#).catalognav()
            //Arcserve.DataProtect.Util.Alert({ message: "No item selected." });
            //return;
            (function ($) {
                var catalogYearMonthInfoHash = [];
                var organization = "@Model.Organization";

                var restoreCacheKey = "CacheKey_Restore_" + organization;

                var catalogCalendar = $("#catalog-calendar").datepicker({
                    onSelect: function (date, inst) {
                        var selectDate = new Date(date);
                        if (haveCatalogDaysInMonths[selectDate]) {
                            var updateData = { url: getCatalogsInDayUrl, data: { day: selectDate, organization: organization } };
                            catalogSelection.catalogselection("update", updateData);
                        }
                        else {
                            Arcserve.DataProtect.Util.Alert({ message: "this day no catalog jobs." });
                            //alert("this day no catalog jobs.");
                            return false;
                        }
                    },
                    onChangeMonthYear: function (year, month, inst) {
                        var key = year + "" + month;
                        if (!catalogYearMonthInfoHash[key]) {
                            catalogYearMonthInfoHash[key] = true;
                            var date = new Date(year, month, 1);
                            var data = { date: date, organization: organization };
                            Arcserve.DataProtect.Util.Post(data, "@Url.Action("GetCatalogDaysInMonth")", function (result) {
                                var days = result.Days;
                                $.each(days, function (i, day) {
                                    var dayTime = Restore.GetDateTime(day);
                                    haveCatalogDaysInMonths[dayTime] = true;
                                });
                                $("#catalog-calendar").datepicker("refresh");
                            })
                        }
                    },
                    beforeShowDay: function (date) {
                        if (haveCatalogDaysInMonths) {
                            if (haveCatalogDaysInMonths[date]) {
                                return [true, 'restore-data'];
                            }
                        }
                        return [true, ''];
                    }
                });

                var catalogSelection = $("#catalogInDays").catalogselection();
                var mailboxNav = $("#list").mailboxnav({ cacheKey: restoreCacheKey });
                var folderNav = $("#folderList").foldernav({ cacheKey: restoreCacheKey });
                var mailboxDetail = $("#details").usermailboxdetail();
                var mailItemDetail = $("#maildetails").maildetail({ cacheKey: restoreCacheKey });

                var getMailboxUrl = "@Url.Action("UpdateMailboxes")";
                var getFolderUrl = "@Url.Action("UpdateFolders")";
                var getMailItemUrl = "@Url.Action("UpdateMails")";
                var getCalendarUrl = "@Url.Action("GetLatestMonthCatalogs")";
                var getCatalogsCalendarInMonthsUrl = "@Url.Action("GetCatalogDaysInMonth")";
                var getCatalogsInDayUrl = "@Url.Action("GetCatalogs")";

                var userInfomation = {}; // todo admin user informations.

                var catalogInfo = null;
                var haveCatalogDaysInMonths = [];


                catalogSelection.on("onSelect", function (e, catalogItem) {
                    mailboxNav.show();
                    mailboxDetail.show();
                    folderNav.hide();
                    mailItemDetail.hide();

                    Restore.Item.Clear(restoreCacheKey);
                    catalogInfo = catalogItem;

                    catalogInfo.StartTime = Restore.GetDateTime(catalogInfo.StartTime);

                    var mailboxAjaxInfo = { url: getMailboxUrl, data: { catalogJob: catalogItem } };
                    mailboxNav.mailboxnav("update", mailboxAjaxInfo);

                    folderNav.foldernav("update");
                    mailItemDetail.maildetail("update");
                });

                mailboxNav.on("onSelect", function (e, item) {
                    folderNav.hide();
                    mailItemDetail.hide();
                    folderNav.foldernav("update");
                    mailItemDetail.maildetail("update");

                    mailboxDetail.usermailboxdetail("update", item);
                });

                mailboxDetail.on("openMailbox", function (e, item) {
                    mailboxNav.hide();
                    mailboxDetail.hide();
                    folderNav.show();
                    mailItemDetail.show();
                    folderNav.foldernav("update");
                    mailItemDetail.maildetail("update");

                    var folderUpdateData = { url: getFolderUrl, data: { catalogJob: catalogInfo, mailAddress: item.OtherInformation.MailAddress } };
                    folderNav.foldernav("setRootFolderId", item.Id);
                    folderNav.foldernav("update", folderUpdateData);
                });

                $("#Mailboxes").on("click", function () {
                    mailboxNav.show();
                    mailboxDetail.show();
                    folderNav.hide();
                    mailItemDetail.hide();
                });

                folderNav.on("onSelect", function (e, item) {
                    var mailItemUpdateData = { url: getMailItemUrl, data: { catalogJob: catalogInfo, folderId: item.Id } };
                    mailItemDetail.maildetail("update", mailItemUpdateData);
                })


                Restore.Item.Clear(restoreCacheKey);

                Arcserve.DataProtect.Util.Post({ organization: organization },
                    getCalendarUrl,
                    function (data) {
                        if (typeof (data) !== "undefined") {
                            if (typeof (data.CatalogJobsInLatestDay) !== "undefined") {
                                $("#catalog-calendar").datepicker("setDate", Restore.GetDateTime(data.LatestCatalogJob.StartTime));

                                $.each(data.Days, function (i, item) {
                                    data.Days[i] = Restore.GetDateTime(item);
                                    haveCatalogDaysInMonths[data.Days[i]] = true;
                                })

                                data.LatestCatalogJob.StartTime = Restore.GetDateTime(data.LatestCatalogJob.StartTime);
                                for (var i = 0 ; i < data.CatalogJobsInLatestDay.length; i++) {
                                    data.CatalogJobsInLatestDay[i].StartTime = data.CatalogJobsInLatestDay[i].StartTime;
                                }


                                //haveCatalogDaysInMonths = data.Days;

                                var updateData = { url: getCatalogsInDayUrl, data: { day: data.LatestCatalogJob.StartTime } };
                                //catalogSelection.catalogselection("update", updateData);
                                var latestDateTime = data.LatestCatalogJob.StartTime;
                                var latestDay = new Date(latestDateTime.getFullYear(), latestDateTime.getMonth(), latestDateTime.getDate(), 0, 0, 0, 0);
                                catalogSelection.catalogselection("updateWithData", { catalogs: data.CatalogJobsInLatestDay, day: latestDay });

                                $("#catalog-calendar").datepicker("refresh");
                            }
                        }
                    });
                var modelDialogHtml = $(".restore-destination-container").html();
                modelDialogHtml = modelDialogHtml.replace(/(\r\n|\n|\r)/gm, "");
                $(".restore-destination-container").html("");
                var formValidator = null;


                $("#RestoreBtn").on("click", function () {
                    var isSelected = Restore.Item.IsSelectAnyItem(restoreCacheKey);
                    if (!isSelected) {
                        Arcserve.DataProtect.Util.Alert({ message: "No item selected." });
                        return;
                    }

                    BootstrapDialog.show({
                        title: "Restore Option",
                        message: modelDialogHtml,
                        closeByBackdrop: false,
                        closeByKeyboard: false,
                        cssClass: "restore-dialog",
                        buttons: [
                            {
                                label: "Restore",
                                action: function (selfDialog) {
                                    $("#restore_destination_form").submit();
                                    //RestoreToDestination(selfDialog);
                                }
                            },
                            {
                                label: "Cancel",
                                action: function (selfDialog) {
                                    selfDialog.close();
                                }
                            }
                        ],
                        onshown: function (selfDialog) {
                            formValidator = $("#restore_destination_form").validate({
                                excluded: ':disabled',
                                rules: {
                                    RestoreFolder: {
                                        required: "#RestoreToOrg:checked"
                                    },
                                    RestoreAlterFolder:{
                                        required: "#RestoreToAlter:checked"
                                    },
                                    RestoreAlterMailbox:{
                                        required: "#RestoreToAlter:checked"
                                    },
                                    NotificationAddress: {
                                        required: "#RestoreToAzure:checked"
                                    },
                                    RestoreAdminUser: {
                                        required: true
                                    }
                                },
                                submitHandler: function (form) {
                                    RestoreToDestination(selfDialog);
                                }
                            });

                            $("[name='RestoreType']").bind("click.restore", function () {
                                var restoreType = $("[name='RestoreType']:checked").val();
                                if (restoreType == "@ViewBag.Org") {
                                    $("#restore_dump").addClass("hidden");
                                    $("#restore_alternative_mailbox").addClass("hidden");
                                    $("#restore_alternative_folder").addClass("hidden");
                                    $("#restore_original_folder").removeClass("hidden");
                                    $("#dump_type").addClass("hidden");
                                }
                                else if (restoreType == "@ViewBag.Alter") {
                                    $("#restore_dump").addClass("hidden");
                                    $("#restore_alternative_mailbox").removeClass("hidden");
                                    $("#restore_alternative_folder").removeClass("hidden");
                                    $("#restore_original_folder").addClass("hidden");
                                    $("#dump_type").addClass("hidden");
                                }
                                else if (restoreType == "@ViewBag.Dump") {
                                    $("#restore_dump").removeClass("hidden");
                                    $("#restore_alternative_mailbox").addClass("hidden");
                                    $("#restore_alternative_folder").addClass("hidden");
                                    $("#restore_original_folder").addClass("hidden");
                                    $("#dump_type").removeClass("hidden");
                                }
                            });
                        }
                    })
                    //dialog.dialog("open");
                });

                //var originalRestoreHtml = $("#restore_destination").html();

                function RestoreToDestination(selfDialog) {
                    if (!formValidator.valid()) {
                        return;
                    }

                    var isSelected = Restore.Item.IsSelectAnyItem(restoreCacheKey);
                    if (!isSelected) {
                        Arcserve.DataProtect.Util.Alert({ message: "No item selected." });
                        return;
                    }

                    var selectedItems = Restore.Item.GetTotalSelectItems(restoreCacheKey);
                    if (selectedItems.length == 0) {
                        Arcserve.DataProtect.Util.Alert({ message: "No item selected." });
                        return;
                    }

                    var restoreType = $("[name='RestoreType']:checked").val();
                    var adminUserName = $("#RestoreAdminUser").val();
                    var adminPassword = $("#RestoreAdminPassword").val();
                    var adminUser = { UserAddress: adminUserName, Password: adminPassword, Organization: organization };
                    var exportType = $("[name='ExportType']:checked").val();
                    
                    if (restoreType == "@ViewBag.Alter") {
                        var date = new Date();
                        var folderName = $("#RestoreAlterFolder").val();
                        var mailboxAddress = $("#RestoreAlterMailbox").val();
                        var destination = { MailboxAddress: mailboxAddress, FolderPath: folderName };
                        var data = { catalog: catalogInfo, restoreAdminUserInfo: adminUser, destination: destination, selectedItem: selectedItems };
                        Arcserve.DataProtect.Util.Ajax.loading("Processing");
                        Arcserve.DataProtect.Util.Post(data, "@Url.Action("RestoreItemsToAlter")", function (data) {

                            Arcserve.DataProtect.Util.Alert({
                                type: BootstrapDialog.TYPE_INFO,
                                title: "Info",
                                message: "restore finished.",
                                callbackForYes: function (infoDialog) {
                                    //dialog.dialog("close");
                                    infoDialog.close();
                                    selfDialog.close();
                                    Arcserve.DataProtect.Util.Ajax.close();
                                }
                            })

                            //alert("restore finished.");
                        }, function () {
                            Arcserve.DataProtect.Util.Ajax.close();
                        });

                    }
                    else if (restoreType == "@ViewBag.Org") {
                        var date = new Date();
                        var folderName = $("#RestoreFolder").val();
                        var destination = { FolderPath: folderName };
                        var data = { catalog: catalogInfo, restoreAdminUserInfo: adminUser, destination: destination, selectedItem: selectedItems };
                        Arcserve.DataProtect.Util.Ajax.loading("Processing");
                        Arcserve.DataProtect.Util.Post(data, "@Url.Action("RestoreItemsToOrg")", function (data) {

                            Arcserve.DataProtect.Util.Alert({
                                type: BootstrapDialog.TYPE_INFO,
                                title: "Info",
                                message: "restore finished.",
                                callbackForYes: function (infoDialog) {
                                    //dialog.dialog("close");
                                    infoDialog.close();
                                    selfDialog.close();
                                    Arcserve.DataProtect.Util.Ajax.close();
                                }
                            })

                            //alert("restore finished.");
                        }, function () {
                            Arcserve.DataProtect.Util.Ajax.close();
                        });
                    }
                    else if (restoreType == "@ViewBag.Dump") {
                        var data = { catalog: catalogInfo, restoreAdminUserInfo: adminUser, selectedItem: selectedItems, notificationAddress: $("#NotificationAddress").val(), exportType: exportType };
                        Arcserve.DataProtect.Util.Ajax.loading("Processing");
                        Arcserve.DataProtect.Util.Post(data, "@Url.Action("DumpItems")", function (data) {

                            Arcserve.DataProtect.Util.Alert({
                                type: BootstrapDialog.TYPE_INFO,
                                title: "Info",
                                message: "restore finished.",
                                callbackForYes: function (infoDialog) {
                                    //dialog.dialog("close");

                                    infoDialog.close();
                                    selfDialog.close();
                                    Arcserve.DataProtect.Util.Ajax.close();
                                }
                            })
                            //alert("restore finished");
                            //dialog.dialog("close");
                        }, function () {
                            Arcserve.DataProtect.Util.Ajax.close();
                        });
                    }
                }


                //dialog = $(".restore-destination-container").dialog({
                //    autoOpen: false,
                //    modal: true,
                //    minWidth: 800,
                //    buttons: {
                //        "Restore": RestoreToDestination,
                //        Cancel: function () {
                //            dialog.dialog("close");
                //        }
                //    },
                //    close: function () {
                //        formValidator.resetForm();
                //    },
                //    title: "Restore Options"
                //});


            })(jQuery);


        })
    </script>
}